import zipfile
import os
import hashlib
import re
import requests
import csv

directory_to_extract_to = 'D:\\unzippedDirectory'
arch_file = 'D:\\tiff-4.2.0_lab1.zip'

test_zip = zipfile.ZipFile(arch_file)
test_zip_files = test_zip.namelist()
print(test_zip_files)
test_zip.extractall(directory_to_extract_to)
test_zip.close()

#–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ (–ø–æ–ª–Ω—ã–π –ø—É—Ç—å) —Ñ–æ—Ä–º–∞—Ç–∞ txt, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ directory_to_extract_to. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ txt_files

txt_files = []
for r, d, f in os.walk(directory_to_extract_to):
    for i in f:
        if (re.match(r"txt[.].+", i[::-1])):
            txt_files.append(r + "\\" + i)

print(txt_files, end = '\n\n')

#myFile = open(txt_files[0], 'r')
#print(myFile.read(100000))

fileHash = []
for file in txt_files:
    file_data = open(file, 'rb').read()
    fileHash.append(hashlib.md5(file_data).hexdigest())

print(fileHash)

target_hash = "4636f9ae9fef12ebd56cd39586d33cfb"
target_file = 'literally nothing'

for r, d, f in os.walk(directory_to_extract_to):
    for i in f:
        tmp = os.path.join(r, i)
        data = open(tmp, "rb")
        content = data.read()
        if hashlib.md5(content).hexdigest() == target_hash:
            target_file = r + "\\" + i
            target_file_data = content

# –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∏—Å–∫–æ–º–æ–º—É —Ñ–∞–π–ª—É –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ

print("–§–∞–π–ª —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ö—ç—à–µ–º")
print(target_file)
print(target_file_data)


r = requests.get(target_file_data)
result_dct ={} # —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–∞–±–ª–∏—Ü—ã
counter = 0

lines = re.findall(r'<div class="Table-module_row__3TH83">.*?</div>.*?</div>.*?</div>.*?</div>.*?</div>', r.text)
for line in lines:
    # –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ç–∞–±–ª–∏—Ü—ã
    if counter == 0:
        headers = re.sub('<.*?>', ' ', line)
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        headers = re.findall(r'–ó–∞–±–æ–ª–µ–ª–∏|–£–º–µ—Ä–ª–∏|–í—ã–ª–µ—á–∏–ª–∏—Å—å|–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–ª—É—á–∞–∏', headers)
        headers.insert(0, "–°—Ç—Ä–∞–Ω—ã")
        print(headers, end="\n\n")
    else:
        if counter == 1:
            print(line, end="\n\n")

        temp = re.sub('<.*?>', ';', line)
    #    print(temp)
        temp = re.sub("\(.*?\)", '', temp)
    #    print(temp)
        temp = re.sub(';+', ';', temp)
    #    print(temp)
        temp = temp[1: len(temp) - 1]
    #    print(temp)
        temp = re.sub('\s(?=\d)', '', temp)
    #    print(temp)
        temp = re.sub('(?<=\d)\s', '', temp)
    #    print(temp)
        temp = re.sub('\*', '', temp)
    #    print(temp)
        temp = re.sub('_', '-1', temp)
    #    print(temp)
    #    print("\n\n")

        # –†–∞–∑–±–∏—Ç–∏–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
        tmp_split = temp.split(';')

        if len(tmp_split) == 6: #–ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ "–≤—Å–µ–≥–æ"
            tmp_split.pop(0)

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ (—É–¥–∞–ª–µ–Ω–∏–µ "–ª–∏—à–Ω–∏—Ö" —Å–∏–º–≤–æ–ª–æ–≤) –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞
        country_name = tmp_split[0]
        country_name = re.sub('.*\s\s', '', country_name)

        col1_val = tmp_split[1]
        col2_val = tmp_split[2]
        col3_val = tmp_split[3]
        col4_val = tmp_split[4]

        # –ó–∞–ø–∏—Å—å –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ª–æ–≤–∞—Ä—å
        result_dct[country_name] = [0, 0, 0, 0]
        result_dct[country_name][0] = int(col1_val)
        result_dct[country_name][1] = int(col2_val)
        result_dct[country_name][2] = int(col3_val)
        result_dct[country_name][3] = int(col4_val)

    counter += 1

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
# –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è –≤ —Ñ–∞–π–ª

output = open('data.csv', 'w')
w = csv.writer(output, delimiter=";")
w.writerow(headers)
for key in result_dct.keys():
    w.writerow([key, result_dct[key][0], result_dct[key][1], result_dct[key][2], result_dct[key][3]])
output.close()

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —ç–∫—Ä–∞–Ω –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ (–ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü —Ç–∞–±–ª–∏—Ü—ã)

target_country = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: ")
print(result_dct[target_country])


"""<div class="Table-module_row__3TH83"><div class="Table-module_cell__EFKDW Table-module_white__gzvo0 Table-module_m__29G9r">üá∫üá∏  –°–®–ê</div><div class="Table-module_cell__EFKDW Table-module_white__gzvo0 Table-module_s__Vl_Eg">45&nbsp;953&nbsp;186 <span style="color:#5C5E62;font-size:10px">(+29&nbsp;302)</span></div><div class="Table-module_cell__EFKDW Table-module_white__gzvo0 Table-module_s__Vl_Eg">745&nbsp;668 <span style="color:#5C5E62;font-size:10px">(+291)</span></div><div class="Table-module_cell__EFKDW Table-module_white__gzvo0 Table-module_s__Vl_Eg">0*</div><div class="Table-module_cell__EFKDW Table-module_white__gzvo0 Table-module_s__Vl_Eg">_</div></div>"""